Sto se tice rasporeda klasa, ako dodas klasu "FIleStore" ili "Store" za spremanje "obradjenih rezultata"
stvari su jasnije.
Naravno ovaj store sluzi kao "simuliranje baze podataka", tj. ima metode npr 
.save
.retrieve
.delete (ali ovdje nije potrebna).

Dodatno: Store klasa sluzi kao storage, ali za to je najbolje koristiti "hash", znaci key/value store. Primjer keyvalue stora 
(tocnije array hash-eva) (a mozes i u tri razlicite varijable sa hash-om, ali je ovako ispravnije) (nakon obrade podataka) bi bio recimo

varijable[path][unique_visits] =
variable[path][total_visits] = 

variable[path][unique_ips] =
(sve unutar te store klase)

Store klasu injectas u druge klase.


Dodatno 2 : Ako save-as samo unique ip's taj hash ti pomaze prilikom obrade podataka / linija, na nacin :
a) Ako je unique ip => 1) dodaj u unique visits 2) dodaj u total visits, 3) spremi uqniue ip
b) Ako nije unique ip => 1) dodaj/povecaj counter na total visits